
module AWS.Inspector.Requests where

import Prelude
import Control.Monad.Aff (Aff)
import Control.Monad.Eff.Exception (EXCEPTION)

import AWS.Request (MethodName(..), request) as AWS
import AWS.Request.Types as Types

import AWS.Inspector as Inspector
import AWS.Inspector.Types as InspectorTypes


-- | <p>Assigns attributes (key and value pairs) to the findings that are specified by the ARNs of the findings.</p>
addAttributesToFindings :: forall eff. Inspector.Service -> InspectorTypes.AddAttributesToFindingsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.AddAttributesToFindingsResponse
addAttributesToFindings (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "addAttributesToFindings"


-- | <p>Creates a new assessment target using the ARN of the resource group that is generated by <a>CreateResourceGroup</a>. If the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isn’t already registered, also creates and registers a service-linked role to grant Amazon Inspector access to AWS Services needed to perform security assessments. You can create up to 50 assessment targets per AWS account. You can run up to 500 concurrent agents per AWS account. For more information, see <a href="http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html"> Amazon Inspector Assessment Targets</a>.</p>
createAssessmentTarget :: forall eff. Inspector.Service -> InspectorTypes.CreateAssessmentTargetRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.CreateAssessmentTargetResponse
createAssessmentTarget (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "createAssessmentTarget"


-- | <p>Creates an assessment template for the assessment target that is specified by the ARN of the assessment target. If the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isn’t already registered, also creates and registers a service-linked role to grant Amazon Inspector access to AWS Services needed to perform security assessments.</p>
createAssessmentTemplate :: forall eff. Inspector.Service -> InspectorTypes.CreateAssessmentTemplateRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.CreateAssessmentTemplateResponse
createAssessmentTemplate (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "createAssessmentTemplate"


-- | <p>Creates a resource group using the specified set of tags (key and value pairs) that are used to select the EC2 instances to be included in an Amazon Inspector assessment target. The created resource group is then used to create an Amazon Inspector assessment target. For more information, see <a>CreateAssessmentTarget</a>.</p>
createResourceGroup :: forall eff. Inspector.Service -> InspectorTypes.CreateResourceGroupRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.CreateResourceGroupResponse
createResourceGroup (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "createResourceGroup"


-- | <p>Deletes the assessment run that is specified by the ARN of the assessment run.</p>
deleteAssessmentRun :: forall eff. Inspector.Service -> InspectorTypes.DeleteAssessmentRunRequest -> Aff (exception :: EXCEPTION | eff) Unit
deleteAssessmentRun (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "deleteAssessmentRun"


-- | <p>Deletes the assessment target that is specified by the ARN of the assessment target.</p>
deleteAssessmentTarget :: forall eff. Inspector.Service -> InspectorTypes.DeleteAssessmentTargetRequest -> Aff (exception :: EXCEPTION | eff) Unit
deleteAssessmentTarget (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "deleteAssessmentTarget"


-- | <p>Deletes the assessment template that is specified by the ARN of the assessment template.</p>
deleteAssessmentTemplate :: forall eff. Inspector.Service -> InspectorTypes.DeleteAssessmentTemplateRequest -> Aff (exception :: EXCEPTION | eff) Unit
deleteAssessmentTemplate (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "deleteAssessmentTemplate"


-- | <p>Describes the assessment runs that are specified by the ARNs of the assessment runs.</p>
describeAssessmentRuns :: forall eff. Inspector.Service -> InspectorTypes.DescribeAssessmentRunsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.DescribeAssessmentRunsResponse
describeAssessmentRuns (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "describeAssessmentRuns"


-- | <p>Describes the assessment targets that are specified by the ARNs of the assessment targets.</p>
describeAssessmentTargets :: forall eff. Inspector.Service -> InspectorTypes.DescribeAssessmentTargetsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.DescribeAssessmentTargetsResponse
describeAssessmentTargets (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "describeAssessmentTargets"


-- | <p>Describes the assessment templates that are specified by the ARNs of the assessment templates.</p>
describeAssessmentTemplates :: forall eff. Inspector.Service -> InspectorTypes.DescribeAssessmentTemplatesRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.DescribeAssessmentTemplatesResponse
describeAssessmentTemplates (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "describeAssessmentTemplates"


-- | <p>Describes the IAM role that enables Amazon Inspector to access your AWS account.</p>
describeCrossAccountAccessRole :: forall eff. Inspector.Service ->  Aff (exception :: EXCEPTION | eff) InspectorTypes.DescribeCrossAccountAccessRoleResponse
describeCrossAccountAccessRole (Inspector.Service serviceImpl) = AWS.request serviceImpl method unit where
    method = AWS.MethodName "describeCrossAccountAccessRole"


-- | <p>Describes the findings that are specified by the ARNs of the findings.</p>
describeFindings :: forall eff. Inspector.Service -> InspectorTypes.DescribeFindingsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.DescribeFindingsResponse
describeFindings (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "describeFindings"


-- | <p>Describes the resource groups that are specified by the ARNs of the resource groups.</p>
describeResourceGroups :: forall eff. Inspector.Service -> InspectorTypes.DescribeResourceGroupsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.DescribeResourceGroupsResponse
describeResourceGroups (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "describeResourceGroups"


-- | <p>Describes the rules packages that are specified by the ARNs of the rules packages.</p>
describeRulesPackages :: forall eff. Inspector.Service -> InspectorTypes.DescribeRulesPackagesRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.DescribeRulesPackagesResponse
describeRulesPackages (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "describeRulesPackages"


-- | <p>Produces an assessment report that includes detailed and comprehensive results of a specified assessment run. </p>
getAssessmentReport :: forall eff. Inspector.Service -> InspectorTypes.GetAssessmentReportRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.GetAssessmentReportResponse
getAssessmentReport (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "getAssessmentReport"


-- | <p>Information about the data that is collected for the specified assessment run.</p>
getTelemetryMetadata :: forall eff. Inspector.Service -> InspectorTypes.GetTelemetryMetadataRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.GetTelemetryMetadataResponse
getTelemetryMetadata (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "getTelemetryMetadata"


-- | <p>Lists the agents of the assessment runs that are specified by the ARNs of the assessment runs.</p>
listAssessmentRunAgents :: forall eff. Inspector.Service -> InspectorTypes.ListAssessmentRunAgentsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.ListAssessmentRunAgentsResponse
listAssessmentRunAgents (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "listAssessmentRunAgents"


-- | <p>Lists the assessment runs that correspond to the assessment templates that are specified by the ARNs of the assessment templates.</p>
listAssessmentRuns :: forall eff. Inspector.Service -> InspectorTypes.ListAssessmentRunsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.ListAssessmentRunsResponse
listAssessmentRuns (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "listAssessmentRuns"


-- | <p>Lists the ARNs of the assessment targets within this AWS account. For more information about assessment targets, see <a href="http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">Amazon Inspector Assessment Targets</a>.</p>
listAssessmentTargets :: forall eff. Inspector.Service -> InspectorTypes.ListAssessmentTargetsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.ListAssessmentTargetsResponse
listAssessmentTargets (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "listAssessmentTargets"


-- | <p>Lists the assessment templates that correspond to the assessment targets that are specified by the ARNs of the assessment targets.</p>
listAssessmentTemplates :: forall eff. Inspector.Service -> InspectorTypes.ListAssessmentTemplatesRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.ListAssessmentTemplatesResponse
listAssessmentTemplates (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "listAssessmentTemplates"


-- | <p>Lists all the event subscriptions for the assessment template that is specified by the ARN of the assessment template. For more information, see <a>SubscribeToEvent</a> and <a>UnsubscribeFromEvent</a>.</p>
listEventSubscriptions :: forall eff. Inspector.Service -> InspectorTypes.ListEventSubscriptionsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.ListEventSubscriptionsResponse
listEventSubscriptions (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "listEventSubscriptions"


-- | <p>Lists findings that are generated by the assessment runs that are specified by the ARNs of the assessment runs.</p>
listFindings :: forall eff. Inspector.Service -> InspectorTypes.ListFindingsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.ListFindingsResponse
listFindings (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "listFindings"


-- | <p>Lists all available Amazon Inspector rules packages.</p>
listRulesPackages :: forall eff. Inspector.Service -> InspectorTypes.ListRulesPackagesRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.ListRulesPackagesResponse
listRulesPackages (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "listRulesPackages"


-- | <p>Lists all tags associated with an assessment template.</p>
listTagsForResource :: forall eff. Inspector.Service -> InspectorTypes.ListTagsForResourceRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.ListTagsForResourceResponse
listTagsForResource (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "listTagsForResource"


-- | <p>Previews the agents installed on the EC2 instances that are part of the specified assessment target.</p>
previewAgents :: forall eff. Inspector.Service -> InspectorTypes.PreviewAgentsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.PreviewAgentsResponse
previewAgents (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "previewAgents"


-- | <p>Registers the IAM role that grants Amazon Inspector access to AWS Services needed to perform security assessments.</p>
registerCrossAccountAccessRole :: forall eff. Inspector.Service -> InspectorTypes.RegisterCrossAccountAccessRoleRequest -> Aff (exception :: EXCEPTION | eff) Unit
registerCrossAccountAccessRole (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "registerCrossAccountAccessRole"


-- | <p>Removes entire attributes (key and value pairs) from the findings that are specified by the ARNs of the findings where an attribute with the specified key exists.</p>
removeAttributesFromFindings :: forall eff. Inspector.Service -> InspectorTypes.RemoveAttributesFromFindingsRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.RemoveAttributesFromFindingsResponse
removeAttributesFromFindings (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "removeAttributesFromFindings"


-- | <p>Sets tags (key and value pairs) to the assessment template that is specified by the ARN of the assessment template.</p>
setTagsForResource :: forall eff. Inspector.Service -> InspectorTypes.SetTagsForResourceRequest -> Aff (exception :: EXCEPTION | eff) Unit
setTagsForResource (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "setTagsForResource"


-- | <p>Starts the assessment run specified by the ARN of the assessment template. For this API to function properly, you must not exceed the limit of running up to 500 concurrent agents per AWS account.</p>
startAssessmentRun :: forall eff. Inspector.Service -> InspectorTypes.StartAssessmentRunRequest -> Aff (exception :: EXCEPTION | eff) InspectorTypes.StartAssessmentRunResponse
startAssessmentRun (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "startAssessmentRun"


-- | <p>Stops the assessment run that is specified by the ARN of the assessment run.</p>
stopAssessmentRun :: forall eff. Inspector.Service -> InspectorTypes.StopAssessmentRunRequest -> Aff (exception :: EXCEPTION | eff) Unit
stopAssessmentRun (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "stopAssessmentRun"


-- | <p>Enables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.</p>
subscribeToEvent :: forall eff. Inspector.Service -> InspectorTypes.SubscribeToEventRequest -> Aff (exception :: EXCEPTION | eff) Unit
subscribeToEvent (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "subscribeToEvent"


-- | <p>Disables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.</p>
unsubscribeFromEvent :: forall eff. Inspector.Service -> InspectorTypes.UnsubscribeFromEventRequest -> Aff (exception :: EXCEPTION | eff) Unit
unsubscribeFromEvent (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "unsubscribeFromEvent"


-- | <p>Updates the assessment target that is specified by the ARN of the assessment target.</p>
updateAssessmentTarget :: forall eff. Inspector.Service -> InspectorTypes.UpdateAssessmentTargetRequest -> Aff (exception :: EXCEPTION | eff) Unit
updateAssessmentTarget (Inspector.Service serviceImpl) = AWS.request serviceImpl method  where
    method = AWS.MethodName "updateAssessmentTarget"
